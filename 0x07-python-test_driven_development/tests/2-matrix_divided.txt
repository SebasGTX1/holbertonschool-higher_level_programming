The ``2-matrix_divided`` module
============================

Using ``matrix_divided``
---------------------

Importing function from the module:
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Tests:

Passing a normal matrix
	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Passing a bad div
	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
        Traceback (most recent call last):
    		...
    	ZeroDivisionError: division by zero

Passing a bad div (char)
        >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 'a')
        Traceback (most recent call last):
                ...
        TypeError: div must be a number

Passing a bad matrix (empty)
        >>> matrix_divided([], 3)
        Traceback (most recent call last):
                ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats

Passing a bad matrix (char element)
        >>> matrix_divided([[1, 2, 'a'], [4, 5, 6]], 3)
        Traceback (most recent call last):
                ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats

Passing a bad matrix (colums with diferent size)
        >>> matrix_divided([[1, 2], [4, 5, 6]], 3)
        Traceback (most recent call last):
                ...
        TypeError: Each row of the matrix must have the same size

Passing a bad matrix (colums with diferent type)
        >>> matrix_divided(["Hello", [4, 5, 6]], 3)
        Traceback (most recent call last):
                ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats

Passing a normal matrix with a negative numbers
        >>> matrix_divided([[1, -2, 3], [4, 5, 6]], 3)
        [[0.33, -0.67, 1.0], [1.33, 1.67, 2.0]]


