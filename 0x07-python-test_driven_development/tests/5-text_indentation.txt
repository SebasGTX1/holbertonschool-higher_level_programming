The ``5-text_indentation`` module
============================

Using ``text_indentation``
---------------------

Importing function from the module:

    >>> text_indentation = __import__('5-text_indentation').text_indentation

Tests:

Printing a message

	>>> text_indentation("""Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quonam modo? Utrum igitur tibi litteram videor an totas paginas commovere? Non autem hoc: igitur ne illud quidem. Fortasse id optimum, sed ubi illud: Plus semper voluptatis? Teneo, inquit, finem illi videri nihil dolere. Transfer idem ad modestiam vel temperantiam, quae est moderatio cupiditatum rationi oboediens. Si id dicis, vicimus. Inde sermone vario sex illa a Dipylo stadia confecimus. Sin aliud quid voles, postea. Quae animi affectio suum cuique tribuens atque hanc, quam dico. Utinam quidem dicerent alium alio beatiorem! Iam ruinas videres""")
	Lorem ipsum dolor sit amet, consectetur adipiscing elit.
	<BLANKLINE>
	Quonam modo?
	<BLANKLINE>
	Utrum igitur tibi litteram videor an totas paginas commovere?
	<BLANKLINE>
	Non autem hoc:
	<BLANKLINE>
	igitur ne illud quidem.
	<BLANKLINE>
	Fortasse id optimum, sed ubi illud:
	<BLANKLINE>
	Plus semper voluptatis?
	<BLANKLINE>
	Teneo, inquit, finem illi videri nihil dolere.
	<BLANKLINE>
	Transfer idem ad modestiam vel temperantiam, quae est moderatio cupiditatum rationi oboediens.
	<BLANKLINE>
	Si id dicis, vicimus.
	<BLANKLINE>
	Inde sermone vario sex illa a Dipylo stadia confecimus.
	<BLANKLINE>
	Sin aliud quid voles, postea.
	<BLANKLINE>
	Quae animi affectio suum cuique tribuens atque hanc, quam dico.
	<BLANKLINE>
	Utinam quidem dicerent alium alio beatiorem! Iam ruinas videres

Printing a word 

	>>> text_indentation("Hello")
	Hello

Printing a word with spaces

	>>> text_indentation("    Hello    ")
	Hello

Printing a word with special characters

	>>> text_indentation("Hello. ?")
	Hello.
	<BLANKLINE>
	?
	<BLANKLINE>

Passing None

	>>> text_indentation(None)
	Traceback (most recent call last):
		...
	TypeError: text must be a string

Passing a int

	>>> text_indentation(69)
	Traceback (most recent call last):
		...
	TypeError: text must be a string

Passing a char

	>>> text_indentation('a')
	a

Passing an empty string

	>>> text_indentation("")
