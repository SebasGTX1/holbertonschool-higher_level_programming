The ``100-matrix_mul`` module
============================

Using ``matrix_mul``
---------------------

Importing function from the module:

    >>> matrix_mul = __import__('100-matrix_mul').matrix_mul

Test:
Passing matrix of diferent size (possible)
	>>> matrix_mul([[1, 2], [3, 4], [3, 4]], [[5, 6, 1], [7, 8, 2]])
	[[19, 22, 5], [43, 50, 11], [43, 50, 11]]

Missing one argument

	>>> matrix_mul([[1, 2]])
	Traceback (most recent call last):
    		...
	TypeError: matrix_mul() missing 1 required positional argument: 'm_b'

Missing arguments

	>>> matrix_mul()
	Traceback (most recent call last):
		...
	TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'



Multiplying two matrices (same size)
	>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
	[[7, 10], [15, 22]]

Multiplying two matrices (different size but possible)

	>>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
	[[13, 16]]

Multiplying two matrices with floats
	>>> matrix_mul([[1.1, 2]], [[3, 4], [5, 6]])
	[[13.3, 16.4]]

Passing a bad matrix a (number)
	>>> matrix_mul(2, [[1, 2]])
	Traceback (most recent call last):
		...
	TypeError: m_a must be a list

Passing a bad matrix b (number)
        >>> matrix_mul([[1, 2]], 2)
        Traceback (most recent call last):
                ...
        TypeError: m_b must be a list

Passing a bad matrix a (list of chars)
        >>> matrix_mul(['a', 'b'], [[1, 2]])
        Traceback (most recent call last):
                ...
        TypeError: m_a must be a list of lists

Passing a bad matrix b (list of chars)
        >>> matrix_mul([[1, 2]], ['a', 'b'])
        Traceback (most recent call last):
                ...
        TypeError: m_b must be a list of lists

Passing a bad matrix b (list of list of chars)
	>>> matrix_mul([[1, 2], [1, 2]], [['a', 'b']])
	Traceback (most recent call last):
		...
	TypeError: m_b should contain only integers or floats

Passing a bad matrix a (list of list of chars)
        >>> matrix_mul([['a', 'b']], [[1, 2], [1, 2]])
        Traceback (most recent call last):
                ...
        TypeError: m_a should contain only integers or floats

Passing an empty matrix a
	>>> matrix_mul([[]], [[1, 2]])
	Traceback (most recent call last):
		...
	ValueError: m_a can't be empty

Passing an empty matrix a
        >>> matrix_mul([[1, 2]], [[]])
        Traceback (most recent call last):
                ...
        ValueError: m_b can't be empty

Passing a bad matrix a (rows with diferent size)
	>>> matrix_mul([[1, 2, 3], [1, 2]], [[1, 2], [1, 2]])
	Traceback (most recent call last):
		...
	TypeError: each row of m_a must be of the same size

Passing a bad matrix a (rows with diferent size)
        >>> matrix_mul([[1, 2], [1, 2]], [[1, 2, 3], [1, 2]])
        Traceback (most recent call last):
                ...
        TypeError: each row of m_b must be of the same size

Multiplying two matrices (different size but not possible)

	>>> matrix_mul([[1, 2, 3]], [[3, 4], [5, 6]])
        Traceback (most recent call last):
		...
	ValueError: m_a and m_b can't be multiplied
