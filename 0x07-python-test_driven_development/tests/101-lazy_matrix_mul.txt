The ``101-lazy_matrix_mul`` module
============================

Using ``lazy_matrix_mul``
---------------------

Importing function from the module:

	>>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul

Test:
Missing one argument

	>>> lazy_matrix_mul([[1, 2]])
	Traceback (most recent call last):
		...
	TypeError: lazy_matrix_mul() missing 1 required positional argument: 'm_b'

Missing arguments

	>>> lazy_matrix_mul()
	Traceback (most recent call last):
		...
	TypeError: lazy_matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

Passing a bad matrix a (rows with diferent size)
	>>> lazy_matrix_mul([[1, 2, 3], [1, 2]], [[1, 2], [1, 2]])
	Traceback (most recent call last):
		...
	ValueError: setting an array element with a sequence.

Multiplying two matrices (same size)
	>>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
	array([[ 7, 10],
               [15, 22]])

Multiplying two matrices (different size but possible)

	>>> lazy_matrix_mul([[1, 2]], [[3, 4], [5, 6]])
	array([[13, 16]])

Multiplying two matrices with floats
	>>> lazy_matrix_mul([[1.1, 2]], [[3, 4], [5, 6]])
	array([[13.3, 16.4]])

Passing a bad matrix b (number)
	>>> lazy_matrix_mul([[1, 2]], 2)
	Traceback (most recent call last):
		...
	ValueError: Scalar operands are not allowed, use '*' instead

Passing a bad matrix a (list of chars)
        >>> lazy_matrix_mul(['a', 'b'], [[1, 2]])
	Traceback (most recent call last):
		...
	ValueError: shapes (2,) and (1,2) not aligned: 2 (dim 0) != 1 (dim 0)

Passing an empty matrix a
	>>> lazy_matrix_mul([[]], [[1, 2]])
	Traceback (most recent call last):
		...
	ValueError: shapes (1,0) and (1,2) not aligned: 0 (dim 1) != 1 (dim 0)

Multiplying two matrices (different size but not possible)

	>>> lazy_matrix_mul([[1, 2, 3]], [[3, 4], [5, 6]])
        Traceback (most recent call last):
		...
	ValueError: shapes (1,3) and (2,2) not aligned: 3 (dim 1) != 2 (dim 0)
